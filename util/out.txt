-------- client\.eslintrc.json --------
{
  "extends": "next/core-web-vitals"
}

-------- client\.gitignore --------
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.js
.yarn/install-state.gz

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# local env files
.env*.local

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts

-------- client\next-env.d.ts --------
/// <reference types="next" />
/// <reference types="next/image-types/global" />

// NOTE: This file should not be edited
// see https://nextjs.org/docs/basic-features/typescript for more information.

-------- client\next.config.mjs --------
/** @type {import('next').NextConfig} */
const nextConfig = {};

export default nextConfig;

-------- client\package.json --------
{
  "name": "client",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "ant-design": "^1.0.0",
    "antd": "^5.20.3",
    "next": "14.2.7",
    "react": "^18",
    "react-dom": "^18"
  },
  "devDependencies": {
    "@types/node": "^20",
    "@types/react": "^18",
    "@types/react-dom": "^18",
    "eslint": "^8",
    "eslint-config-next": "14.2.7",
    "postcss": "^8",
    "tailwindcss": "^3.4.1",
    "typescript": "^5"
  }
}

-------- client\postcss.config.mjs --------
/** @type {import('postcss-load-config').Config} */
const config = {
  plugins: {
    tailwindcss: {},
  },
};

export default config;

-------- client\README.md --------
This is a [Next.js](https://nextjs.org/) project bootstrapped with [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app).

## Getting Started

First, run the development server:

```bash
npm run dev
# or
yarn dev
# or
pnpm dev
# or
bun dev
```

Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.

You can start editing the page by modifying `app/page.tsx`. The page auto-updates as you edit the file.

This project uses [`next/font`](https://nextjs.org/docs/basic-features/font-optimization) to automatically optimize and load Inter, a custom Google Font.

## Learn More

To learn more about Next.js, take a look at the following resources:

- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.
- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.

You can check out [the Next.js GitHub repository](https://github.com/vercel/next.js/) - your feedback and contributions are welcome!

## Deploy on Vercel

The easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.

Check out our [Next.js deployment documentation](https://nextjs.org/docs/deployment) for more details.

-------- client\tailwind.config.ts --------
import type { Config } from "tailwindcss";

const config: Config = {
  content: [
    "./src/pages/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/components/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/app/**/*.{js,ts,jsx,tsx,mdx}",
  ],
  theme: {
    colors: {
      orange: "#f08f4f",
      red: "#E05858FF",
      black: "#000000",
      white: "#FFFFFF",
      lightgrey: "#686868FF",
      grey: "#222222FF",
      darkgrey: "#111111",
      transparent: "#00000000",
    },
    extend: {
      backgroundImage: {
        "gradient-radial": "radial-gradient(var(--tw-gradient-stops))",
        "gradient-conic":
          "conic-gradient(from 180deg at 50% 50%, var(--tw-gradient-stops))",
      },
    },
    fontFamily: {
      mono: ['Courier New', 'monospace']
    }
  },
  plugins: [],
};
export default config;
-------- client\tsconfig.json --------
{
  "compilerOptions": {
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": ["./src/*"]
    }
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  "exclude": ["node_modules"]
}

-------- client\src\app\globals.css --------
@tailwind base;
@tailwind components;
@tailwind utilities;


:root {
  --foreground-rgb: 0, 0, 0;
  --background-rgb: 255, 255, 255;
}

/* @media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
} */

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}
-------- client\src\app\layout.tsx --------
import React from "react";
import { AntdRegistry } from '@ant-design/nextjs-registry';

import type { Metadata } from "next";
import { Inter } from "next/font/google";
import { Button, ConfigProvider, Space } from 'antd';
import "./globals.css";
import Link from "next/link";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "The Exchange",
  description: "The Exchange",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  return (
    <html lang="en">
      <AntdRegistry>
        <ConfigProvider
          theme={{
            components: {
              Button: {
                defaultHoverBorderColor: "orange",
                defaultHoverColor: "black"
              }
            }
          }}
        >
          <body className="font-mono">{children}</body>
        </ConfigProvider>
      </AntdRegistry>
    </html>
  )
}
-------- client\src\app\page.tsx --------
import Image from "next/image";
import React from "react";
import { Button } from "antd";

export default function Home() {
    return (
        <main>
            <div className="flex flex-col px-4 w-screen h-screen bg-black">
                <div className="flex flex-row basis-2/12 p-2">
                    <div className="basis-5/12 m-2"></div>
                    <div className="basis-2/12 m-2" style={{backgroundColor: "#FF0000FF"}}></div>
                    <div className="flex flex-col basis-5/12 m-2">
                        <div className="flex flex-row basis-6/12">
                            <div className="basis-6/12"></div>
                            <div className="basis-6/12 bg-grey"></div>
                        </div>
                        <div className="basis-6/12"></div>
                    </div>
                </div>
                <div className="flex flex-col basis-10/12 px-2 pt-2 bg-darkgrey">
                    <div className="flex flex-col basis-11/12 space-y-2">
                        <div className="basis-3/12 flex flex-row">  
                            <div className="basis-2/12 bg-grey"></div>
                            <div className="basis-10/12 p-2 bg-lightgrey">
                                <div className="w-full h-full bg-grey"></div>
                            </div>
                        </div>
                        <div className="basis-3/12 flex flex-row">  
                            <div className="basis-2/12 bg-grey"></div>
                            <div className="basis-10/12 p-2 bg-lightgrey">
                                <div className="w-full h-full bg-grey"></div>
                            </div>
                        </div>
                        <div className="basis-3/12 flex flex-row">  
                            <div className="basis-2/12 bg-grey"></div>
                            <div className="basis-10/12 p-2 bg-lightgrey">
                                <div className="w-full h-full bg-grey"></div>
                            </div>
                        </div>
                    </div>
                    <div className="basis-1/12 bg-black">
                        <div className="flex flex-row items-center h-full w-full text-white font-extrabold text-3xl">
                            <span className="px-2 text-orange">test@RT-25-SW$~: </span>
                            <input className="flex-1 h-full focus:outline-none bg-transparent" />
                        </div>
                    </div>
                </div>
            </div>
        </main>
    )
}
-------- client\src\app\pages\about\page.tsx --------
export default function About() {
    return (
      <main className="">
        <h1 className="text-5xl">About</h1>
      </main>
    );
  }
  
-------- client\src\app\pages\account\page.tsx --------
export default function Account() {
    return (
      <main className="">
        <h1 className="text-5xl">Account</h1>
      </main>
    );
  }
  
-------- client\src\app\pages\exchange\page.tsx --------
export default function Exchange() {
    return (
      <main className="">
        <h1 className="text-5xl">Exchange</h1>
      </main>
    );
  }
  
-------- client\src\app\pages\option\page.tsx --------
export default function Option() {
    return (
      <main className="">
        <h1 className="text-5xl">Option</h1>
      </main>
    );
  }
  
